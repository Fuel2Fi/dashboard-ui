{"ast":null,"code":"var _jsxFileName = \"/Users/damonholland777/Desktop/trading_bot/dashboard-ui/dashboard-ui/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchStats();\n  }, []);\n  const fetchStats = () => {\n    fetch(\"http://localhost:3001/api/stats\").then(res => res.json()).then(data => {\n      setStats(data);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching stats:\", err);\n      setLoading(false);\n    });\n  };\n  const toggleStrategy = strategy => {\n    if (!stats) return;\n    const isActive = stats.activeStrategies.includes(strategy);\n    let newActive = [];\n    if (isActive) {\n      newActive = stats.activeStrategies.filter(s => s !== strategy);\n    } else {\n      newActive = [...stats.activeStrategies, strategy];\n    }\n    const updatedStats = {\n      ...stats,\n      activeStrategies: newActive,\n      recommendedStrategy: stats.recommendedStrategy // Keep same for now\n    };\n    setStats(updatedStats);\n\n    // POST updated stats to backend API\n    fetch(\"http://localhost:3001/api/stats\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedStats)\n    }).then(res => res.json()).then(data => {\n      console.log(\"Backend updated:\", data);\n    }).catch(err => {\n      console.error(\"Failed to update backend:\", err);\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center\",\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold\",\n      children: \"Strategy Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Active Strategies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-3\",\n          children: [\"MACD-Trend\", \"RSI-Reversal\", \"ADX-Filter\"].map(strategy => /*#__PURE__*/_jsxDEV(Button, {\n            variant: stats.activeStrategies.includes(strategy) ? \"default\" : \"outline\",\n            onClick: () => toggleStrategy(strategy),\n            children: strategy\n          }, strategy, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Recommended Strategy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-semibold\",\n          children: stats.recommendedStrategy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Performance Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PnL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), \" \", stats.pnl]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Win Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), \" \", stats.winRate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sharpe Ratio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), \" \", stats.sharpeRatio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Profit Factor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), \" \", stats.profitFactor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"zr3d2rzWUuuAzE7RwCrYeGz8vE0=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Button","jsxDEV","_jsxDEV","Dashboard","_s","stats","setStats","loading","setLoading","fetchStats","fetch","then","res","json","data","catch","err","console","error","toggleStrategy","strategy","isActive","activeStrategies","includes","newActive","filter","s","updatedStats","recommendedStrategy","method","headers","body","JSON","stringify","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","variant","onClick","pnl","winRate","sharpeRatio","profitFactor","_c","$RefreshReg$"],"sources":["/Users/damonholland777/Desktop/trading_bot/dashboard-ui/dashboard-ui/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Dashboard() {\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchStats();\n  }, []);\n\n  const fetchStats = () => {\n    fetch(\"http://localhost:3001/api/stats\")\n      .then((res) => res.json())\n      .then((data) => {\n        setStats(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Error fetching stats:\", err);\n        setLoading(false);\n      });\n  };\n\n  const toggleStrategy = (strategy) => {\n    if (!stats) return;\n\n    const isActive = stats.activeStrategies.includes(strategy);\n    let newActive = [];\n\n    if (isActive) {\n      newActive = stats.activeStrategies.filter((s) => s !== strategy);\n    } else {\n      newActive = [...stats.activeStrategies, strategy];\n    }\n\n    const updatedStats = {\n      ...stats,\n      activeStrategies: newActive,\n      recommendedStrategy: stats.recommendedStrategy, // Keep same for now\n    };\n\n    setStats(updatedStats);\n\n    // POST updated stats to backend API\n    fetch(\"http://localhost:3001/api/stats\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedStats),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Backend updated:\", data);\n      })\n      .catch((err) => {\n        console.error(\"Failed to update backend:\", err);\n      });\n  };\n\n  if (loading) return <div className=\"p-6 text-center\">Loading dashboard...</div>;\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto space-y-6\">\n      <h1 className=\"text-3xl font-bold\">Strategy Dashboard</h1>\n\n      <Card>\n        <CardContent>\n          <h2 className=\"text-xl font-semibold mb-4\">Active Strategies</h2>\n          <div className=\"flex flex-wrap gap-3\">\n            {[\"MACD-Trend\", \"RSI-Reversal\", \"ADX-Filter\"].map((strategy) => (\n              <Button\n                key={strategy}\n                variant={stats.activeStrategies.includes(strategy) ? \"default\" : \"outline\"}\n                onClick={() => toggleStrategy(strategy)}\n              >\n                {strategy}\n              </Button>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardContent>\n          <h2 className=\"text-xl font-semibold mb-4\">Recommended Strategy</h2>\n          <div className=\"text-lg font-semibold\">{stats.recommendedStrategy}</div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardContent>\n          <h2 className=\"text-xl font-semibold mb-4\">Performance Metrics</h2>\n          <ul className=\"list-disc list-inside space-y-1\">\n            <li><strong>PnL:</strong> {stats.pnl}</li>\n            <li><strong>Win Rate:</strong> {stats.winRate}</li>\n            <li><strong>Sharpe Ratio:</strong> {stats.sharpeRatio}</li>\n            <li><strong>Profit Factor:</strong> {stats.profitFactor}</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}